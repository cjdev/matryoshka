AWSTemplateFormatVersion: '2010-09-09'
Description: Deploy identity provider

Parameters:
  BaseDomain:
    Type: String
    Description: The application's domain
    Default: d.cjpowered.com
  Vpc:
    Type: String
    Description: The VPC to which the load balancer attaches.
    MinLength: 1
  SecurityGroup:
    Type: String
    Description: The security group for the load balancer.
    MinLength: 1
  Subnets:
    Type: List<AWS::EC2::Subnet::Id>
    Description: The subnets to which the load balancer attaches.
    MinLength: 1
  Certificate:
    Type: String
    Description: The load balancer's TLS certificate
    MinLength: 1

Conditions:
  usesProdDomain: !Equals [!Ref BaseDomain, p.cjpowered.com]

Resources:
  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      LoadBalancerAttributes:
        # - Key: access_logs.s3.enabled
        #   Value: true
        # - Key: access_logs.s3.bucket
        #   Value: TODO - The name of the S3 bucket for the access logs. This attribute is required if access logs in Amazon S3 are enabled. The bucket must exist in the same region as the load balancer and have a bucket policy that grants Elastic Load Balancing permission to write to the bucket.
        # - Key: access_logs.s3.prefix
        #   Value: TODO - The prefix for the location in the S3 bucket. If you don't specify a prefix, the access logs are stored in the root of the bucket.
        - Key: deletion_protection.enabled
          Value: !If
          - usesProdDomain
          - true
          - false
      Name: !Sub ${AWS::StackName}-LoadBalancer
      Scheme: internet-facing
      SecurityGroups: [!Ref SecurityGroup]
      Subnets: !Ref Subnets

  HttpListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      Certificates: [!Ref Certificate]
      DefaultActions:
        - TargetGroupArn: !Ref TargetGroup
          Type: forward
      LoadBalancerArn: !Ref LoadBalancer
      Port: 443
      Protocol: HTTPS

  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
        Port: 443
        # this port *should* be overwritten and replaced
        # with a dynamic port by any ECS service with:
        # - a LoadBalancer field that references this TargetGroup
        # - sufficient permissions (elasticloadbalancing:RegisterTargets, possibly others)
        Protocol: HTTPS
        VpcId: !Ref Vpc

Outputs:
  TargetGroup:
    Value: !Ref TargetGroup
