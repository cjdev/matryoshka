AWSTemplateFormatVersion: '2010-09-09'
Description: Postgres database

Parameters:
  AppName:
    Type: String
    Description: The name of the application that owns the db; used to create the db name and the host domain
  BaseDomain:
    Type: String
    Description: The application's domain
    Default: d.cjpowered.com
  Backup:
    Type: String
    Description: Should this DB be backup up?
    Default: false
    AllowedValues: [true, false]
  Vpc:
    Type: String
    Description: The VPC to which the load balancer attaches.
    MinLength: 1
  DatabaseSubnets:
    Type: String
    Description: The subnets to which the load balancer attaches.
    MinLength: 1
  Env:
    Type: String
    Description: The name of environment
    MinLength: 1
  Performance:
    Type: String
    Description: Performance class
    Default: low
    AllowedValues: [high, low]
  Duration:
    Type: String
    Description: Duration policy
    AllowedValues: [temporary, permanent]
  DBMasterUsername:
    Default: postgres
    NoEcho: true
    Description: The database admin account username
    Type: String
    MinLength: 1
    MaxLength: 16
    AllowedPattern: "[a-zA-Z][a-zA-Z0-9]*"
    ConstraintDescription: must begin with a letter and contain only alphanumeric characters.
  DBMasterUserPassword:
    NoEcho: true
    Description: The database admin account password
    Type: String
    MinLength: 8
    MaxLength: 41
    AllowedPattern: "[a-zA-Z0-9]*"
    ConstraintDescription: must contain only alphanumeric characters.
  DBSnapshotIdentifier:
    Description: Id of the snapshot to use if you want to restore the db to a previous state; leaving this blank results in the creation of a brand new db
    Type: String
    Default: ""
  DatabaseSecurityGroup:
    Type: String
    Description: Security group provided by network
    MinLength: 1

Conditions:
  Temporary: !Equals [!Ref Duration, temporary]
  Permanent: !Equals [!Ref Duration, permanent]
  RestoreDbFromSnapshot: !Not [!Equals [!Ref DBSnapshotIdentifier, ""]]

Resources:
  RdsDbSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Subnets available for the RDS DB Instance
      SubnetIds: !Split
        - ','
        - !Ref DatabaseSubnets

  DBInstanceTemporary:
    Type: AWS::RDS::DBInstance
    Condition: Temporary
    DeletionPolicy: Delete
    Properties:
      Engine: postgres
      EngineVersion: 9.4.7
      DBSnapshotIdentifier: !If
        - RestoreDbFromSnapshot
        - !Ref DBSnapshotIdentifier
        - ""
      DBName: !Sub
        - ${Env}${dbNamePart}
        - { dbNamePart: !FindInMap [Apps, !Ref AppName, dbNamePart] }
      MasterUsername: !Ref DBMasterUsername
      MasterUserPassword: !Ref DBMasterUserPassword
      DBInstanceClass: !FindInMap
      - Performance
      - !Ref Performance
      - InstanceType
      AllocatedStorage: !FindInMap
      - Performance
      - !Ref Performance
      - AllocatedStorage
      DBSubnetGroupName: !Ref RdsDbSubnetGroup
      VPCSecurityGroups: [!Ref DatabaseSecurityGroup]
      AutoMinorVersionUpgrade: true
      AllowMajorVersionUpgrade: true
      PubliclyAccessible: false
      Port: '5432'
      Tags:
      - Key: cj:backup
        Value: !Ref Backup

  DBInstancePermanent:
    Type: AWS::RDS::DBInstance
    Condition: Permanent
    DeletionPolicy: Snapshot
    Properties:
      BackupRetentionPeriod: 30
      Engine: postgres
      EngineVersion: 9.4.7
      DBSnapshotIdentifier: !If
        - RestoreDbFromSnapshot
        - !Ref DBSnapshotIdentifier
        - ""
      DBName: !Sub
        - ${Env}${dbNamePart}
        - { dbNamePart: !FindInMap [Apps, !Ref AppName, dbNamePart] }
      MasterUsername: !Ref DBMasterUsername
      MasterUserPassword: !Ref DBMasterUserPassword
      DBInstanceClass: !FindInMap
      - Performance
      - !Ref Performance
      - InstanceType
      AllocatedStorage: !FindInMap
      - Performance
      - !Ref Performance
      - AllocatedStorage
      DBSubnetGroupName: !Ref RdsDbSubnetGroup
      VPCSecurityGroups: [!Ref DatabaseSecurityGroup]
      AutoMinorVersionUpgrade: true
      AllowMajorVersionUpgrade: true
      CopyTagsToSnapshot: true
      PubliclyAccessible: false
      Port: '5432'
      MultiAZ: true
      Tags:
      - Key: cj:backup
        Value: !Ref Backup

  DBHostDomain:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: ZZCW5RQ81QPV3
      Name: !Sub
        - ${Env}-db-${domainPart}.${BaseDomain}
        - { domainPart: !FindInMap [Apps, !Ref AppName, domainPart] }
      Type: CNAME
      TTL: 300
      ResourceRecords:
      - !If
        - Temporary
        - !GetAtt DBInstanceTemporary.Endpoint.Address
        - !GetAtt DBInstancePermanent.Endpoint.Address

Mappings:
  Performance:
    high:
      InstanceType: db.t2.micro
      AllocatedStorage: 5
    low:
      InstanceType: db.t2.micro
      AllocatedStorage: 5
  Apps:
    authservice:
      domainPart: auth
      dbNamePart: authservice
    idprovider:
      domainPart: id-provider
      dbNamePart: idprovider


Outputs:
  DBHost:
    Description: The hostname of the provisioned database
    Value: !Ref DBHostDomain
